#!/usr/bin/env python3
"""
Verify Yoast SEO on Frontend
–ü—Ä–æ–≤–µ—Ä–∫–∞ Yoast SEO –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ
"""

import os
import sys
from pathlib import Path
sys.path.append(str(Path(__file__).parent.parent))

import requests
from requests.auth import HTTPBasicAuth
from core.config import Config

def check_category_seo_on_frontend():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ SEO –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ URL –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    test_urls = [
        ('machine-learning', '–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ'),
        ('llm-news', 'LLM'),
        ('ai-hardware', 'AI –¢–µ—Ö–Ω–∏–∫–∞'),
        ('digital-ai', 'Digital AI'),
        ('ai-education', 'AI –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ')
    ]
    
    print('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Yoast SEO –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ')
    print('=' * 50)
    
    found_yoast_data = 0
    
    for slug, name in test_urls:
        url = f'https://ailynx.ru/category/{slug}/'
        print(f'\nüìÇ {name}:')
        print(f'üîó {url}')
        
        try:
            response = requests.get(url, timeout=10)
            if response.status_code == 200:
                html_content = response.text
                
                # –ò—â–µ–º –º–µ—Ç–∞-—Ç–µ–≥–∏
                title_found = False
                description_found = False
                
                # –ü–æ–∏—Å–∫ title —Ç–µ–≥–∞
                if '<title>' in html_content:
                    title_start = html_content.find('<title>') + 7
                    title_end = html_content.find('</title>', title_start)
                    if title_end > title_start:
                        title = html_content[title_start:title_end].strip()
                        if 'AI Lynx' in title and len(title) > 20:
                            print(f'   ‚úÖ Title: {title}')
                            title_found = True
                        else:
                            print(f'   ‚ùå Title: {title}')
                
                # –ü–æ–∏—Å–∫ meta description
                if 'name="description"' in html_content:
                    desc_start = html_content.find('name="description" content="')
                    if desc_start > 0:
                        desc_start += 28  # –¥–ª–∏–Ω–∞ 'name="description" content="'
                        desc_end = html_content.find('"', desc_start)
                        if desc_end > desc_start:
                            description = html_content[desc_start:desc_end].strip()
                            if len(description) > 50:
                                print(f'   ‚úÖ Description: {description[:60]}...')
                                description_found = True
                            else:
                                print(f'   ‚ùå Description: {description}')
                
                # –ü–æ–∏—Å–∫ Open Graph –¥–∞–Ω–Ω—ã—Ö (Yoast –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö)
                og_title = False
                if 'property="og:title"' in html_content:
                    og_start = html_content.find('property="og:title" content="')
                    if og_start > 0:
                        og_start += 29
                        og_end = html_content.find('"', og_start)
                        if og_end > og_start:
                            og_title_text = html_content[og_start:og_end]
                            if 'AI Lynx' in og_title_text:
                                print(f'   ‚úÖ OG Title: {og_title_text[:50]}...')
                                og_title = True
                
                # –°—á–µ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                if title_found and description_found:
                    found_yoast_data += 1
                    print(f'   üéâ Yoast SEO –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç!')
                elif title_found or description_found:
                    print(f'   ‚ö†Ô∏è Yoast SEO —á–∞—Å—Ç–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç')
                else:
                    print(f'   ‚ùå Yoast SEO –Ω–µ –Ω–∞–π–¥–µ–Ω')
                    
            else:
                print(f'   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {response.status_code}')
                
        except Exception as e:
            print(f'   ‚ùå –û—à–∏–±–∫–∞: {e}')
    
    print(f'\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:')
    print(f'   ‚úÖ –ü–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {found_yoast_data}/{len(test_urls)}')
    
    if found_yoast_data >= len(test_urls) // 2:
        print('üéâ Yoast SEO —É—Å–ø–µ—à–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ!')
        return True
    else:
        print('‚ö†Ô∏è Yoast SEO —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏')
        return False

def check_api_vs_frontend():
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö API –∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"""
    config = Config()
    auth = HTTPBasicAuth(config.wordpress_username, config.wordpress_app_password)
    
    print('\nüîÑ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ API –∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–∞–Ω–Ω—ã—Ö')
    print('=' * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ API
    category_id = 4  # –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ
    api_response = requests.get(f'{config.wordpress_api_url}/categories/{category_id}', auth=auth)
    
    if api_response.status_code == 200:
        api_data = api_response.json()
        api_title = api_data.get('yoast_title', '')
        api_description = api_data.get('yoast_description', '')
        
        print(f'üìä API –¥–∞–Ω–Ω—ã–µ:')
        print(f'   Title: {api_title}')
        print(f'   Description: {api_description}')
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
        frontend_url = 'https://ailynx.ru/category/machine-learning/'
        frontend_response = requests.get(frontend_url, timeout=10)
        
        if frontend_response.status_code == 200:
            html_content = frontend_response.text
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º title
            if '<title>' in html_content:
                title_start = html_content.find('<title>') + 7
                title_end = html_content.find('</title>', title_start)
                frontend_title = html_content[title_start:title_end].strip()
            else:
                frontend_title = '–ù–ï –ù–ê–ô–î–ï–ù'
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º description
            frontend_description = '–ù–ï –ù–ê–ô–î–ï–ù'
            if 'name="description"' in html_content:
                desc_start = html_content.find('name="description" content="')
                if desc_start > 0:
                    desc_start += 28
                    desc_end = html_content.find('"', desc_start)
                    if desc_end > desc_start:
                        frontend_description = html_content[desc_start:desc_end].strip()
            
            print(f'\nüåê –§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–∞–Ω–Ω—ã–µ:')
            print(f'   Title: {frontend_title}')
            print(f'   Description: {frontend_description}')
            
            # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ
            title_match = api_title in frontend_title if api_title else False
            desc_match = api_description == frontend_description if api_description else False
            
            print(f'\nüîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ:')
            print(f'   Title —Å–æ–≤–ø–∞–¥–∞–µ—Ç: {"‚úÖ" if title_match else "‚ùå"}')
            print(f'   Description —Å–æ–≤–ø–∞–¥–∞–µ—Ç: {"‚úÖ" if desc_match else "‚ùå"}')
            
            if title_match and desc_match:
                print('üéâ API –∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!')
                return True
            else:
                print('‚ö†Ô∏è –ï—Å—Ç—å —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è –º–µ–∂–¥—É API –∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º')
                return False
        else:
            print(f'‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: {frontend_response.status_code}')
    else:
        print(f'‚ùå –û—à–∏–±–∫–∞ API: {api_response.status_code}')
    
    return False

def main():
    print('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Yoast SEO –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ')
    print('=' * 60)
    
    frontend_works = check_category_seo_on_frontend()
    api_sync = check_api_vs_frontend()
    
    print('\nüìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:')
    print('=' * 30)
    
    if frontend_works and api_sync:
        print('üéâ –£–°–ü–ï–•! Yoast SEO –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω')
        print('‚úÖ –ú–µ—Ç–∞-—Ç–µ–≥–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ')
        print('‚úÖ API –¥–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º')
        print('‚úÖ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
        
        print('\nüîó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:')
        print('‚Ä¢ https://ailynx.ru/category/machine-learning/')
        print('‚Ä¢ https://ailynx.ru/category/llm-news/')
        print('‚Ä¢ https://ailynx.ru/category/ai-hardware/')
        print('‚Ä¢ https://ailynx.ru/category/digital-ai/')
        
    else:
        print('‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞')
        if not frontend_works:
            print('‚ùå –ú–µ—Ç–∞-—Ç–µ–≥–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')
        if not api_sync:
            print('‚ùå API –∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã')
        
        print('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:')
        print('1. –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à WordPress')
        print('2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Yoast SEO')
        print('3. –ü–µ—Ä–µ—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –∞–¥–º–∏–Ω–∫–µ')

if __name__ == "__main__":
    main()