import re

with open("content_crusoe.md", "r") as f:
    content = f.read()

# –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è Crusoe AI
patterns = [
    r'\]\((https://www\.crusoe\.ai/resources/blog/[^)]+)\)',  # –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç URL
]

print("üß™ –¢–ï–°–¢ CRUSOE AI")
print("=" * 60)

urls = set()
for pattern in patterns:
    matches = re.findall(pattern, content)
    urls.update(matches)

# –î–ª—è –∫–∞–∂–¥–æ–≥–æ URL –∏—â–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
articles = {}
for url in urls:
    url_pos = content.find(url)
    if url_pos > 0:
        # –ò—â–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ URL
        context = content[max(0, url_pos-300):url_pos]
        
        # –ò—â–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ### Title –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ Title
        lines = context.split('\n')
        for line in reversed(lines):
            line = line.strip()
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
            if line.startswith('[Read more') or line.startswith('Arrow Right'):
                continue
            # –ò—â–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            if line.startswith('### '):
                title = line[4:].strip()
                articles[url] = title
                break
            elif line and not line.startswith('[') and not line.startswith('!') and not line.startswith('#') and len(line) > 10:
                # –û–±—ã—á–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –±–µ–∑ ###
                title = line.strip()
                if len(title) < 200 and 'Crusoe' in title or 'AI' in title or 'Cloud' in title:
                    articles[url] = title
                    break

print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(articles)} —Å—Ç–∞—Ç–µ–π:\n")
for i, (url, title) in enumerate(list(articles.items())[:20], 1):
    print(f"{i}. {title[:70]}")
    print(f"   {url}\n")