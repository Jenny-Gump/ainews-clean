#!/usr/bin/env python3
"""
Add Meta Descriptions to Categories
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–π –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —á–µ—Ä–µ–∑ custom fields
"""

import os
import sys
from pathlib import Path
sys.path.append(str(Path(__file__).parent.parent))

import requests
from requests.auth import HTTPBasicAuth
from core.config import Config
import time

# –ú–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
META_DESCRIPTIONS = {
    3: "–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –±–æ–ª—å—à–∏—Ö —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π (LLM) - GPT, Claude, Gemini. –û–±–∑–æ—Ä—ã, —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑ —Ä–∞–∑–≤–∏—Ç–∏—è AI —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞.",  # LLM
    4: "–ù–æ–≤–æ—Å—Ç–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –∏ –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π. –ê–ª–≥–æ—Ä–∏—Ç–º—ã, –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è ML –≤ –±–∏–∑–Ω–µ—Å–µ –∏ –Ω–∞—É–∫–µ.",  # –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ
    5: "–ù–æ–≤–æ—Å—Ç–∏ AI —Ç–µ—Ö–Ω–∏–∫–∏ –∏ –∂–µ–ª–µ–∑–∞: GPU, TPU, —á–∏–ø—ã –¥–ª—è –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π. –û–±–∑–æ—Ä—ã –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è, –æ–±–ª–∞—á–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.",  # AI –¢–µ—Ö–Ω–∏–∫–∞
    6: "AI –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –º–∏—Ä–µ: –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, —Å–æ—Ü—Å–µ—Ç–∏, e-commerce, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥. –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è digital-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤.",  # Digital AI
    7: "AI –≤ —Ñ–∏–Ω–∞–Ω—Å–∞—Ö: –∞–ª–≥–æ—Ç—Ä–µ–π–¥–∏–Ω–≥, –∞–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤, –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è. –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ AI-—Å—Ç–∞—Ä—Ç–∞–ø—ã –∏ —Ñ–∏–Ω—Ç–µ—Ö —Ä–µ—à–µ–Ω–∏—è.",  # AI –≤ –§–∏–Ω–∞–Ω—Å–∞—Ö
    8: "AI –≤ –Ω–∞—É–∫–µ: –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –±–µ–ª–∫–æ–≤, –ø–æ–∏—Å–∫ –ª–µ–∫–∞—Ä—Å—Ç–≤, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤. –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –≤ —Ñ–∏–∑–∏–∫–µ, —Ö–∏–º–∏–∏, –±–∏–æ–ª–æ–≥–∏–∏.",  # AI –≤ –ù–∞—É–∫–µ
    9: "AI –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: –∫—É—Ä—Å—ã –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –∫–∞—Ä—å–µ—Ä–∞ –≤ –ò–ò. –ö–∞–∫ —Å—Ç–∞—Ç—å AI-–∏–Ω–∂–µ–Ω–µ—Ä–æ–º –∏ data scientist.",  # AI –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
    10: "AI –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏–Ω–¥—É—Å—Ç—Ä–∏—è—Ö: —Å–µ–ª—å—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ, –º–µ–¥–∏—Ü–∏–Ω–∞, –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ, –ª–æ–≥–∏—Å—Ç–∏–∫–∞. –£–º–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ –∏ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è.",  # AI –≤ –ò–Ω–¥—É—Å—Ç—Ä–∏—è—Ö
    11: "–õ—é–¥–∏ –≤ AI –∏–Ω–¥—É—Å—Ç—Ä–∏–∏: –∏–Ω—Ç–µ—Ä–≤—å—é —Å —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏, –∏—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞, –∫–∞—Ä—å–µ—Ä–Ω—ã–µ –ø—É—Ç–∏. –≠—Ç–∏–∫–∞ –ò–ò –∏ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä—ã–Ω–æ–∫ —Ç—Ä—É–¥–∞.",  # –õ—é–¥–∏ –≤ AI
    2: "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞: –ø—Ä–æ—Ä—ã–≤—ã –≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö, —Ä–µ–ª–∏–∑—ã AI-–ø—Ä–æ–¥—É–∫—Ç–æ–≤, —Ç—Ä–µ–Ω–¥—ã —Ä–∞–∑–≤–∏—Ç–∏—è –∏–Ω–¥—É—Å—Ç—Ä–∏–∏."  # AI –ù–æ–≤–æ—Å—Ç–∏
}

def create_meta_plugin():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞ –¥–ª—è –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–π"""
    plugin_code = '''<?php
/**
 * Plugin Name: Category Meta Descriptions
 * Description: –î–æ–±–∞–≤–ª—è–µ—Ç –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
 * Version: 1.0
 */

if (!defined('ABSPATH')) {
    exit;
}

class CategoryMetaDescriptions {
    
    public function __construct() {
        add_action('rest_api_init', array($this, 'register_routes'));
        add_action('wp_head', array($this, 'add_category_meta_description'));
    }
    
    public function register_routes() {
        register_rest_route('category-meta/v1', '/update/(?P<id>\\d+)', array(
            'methods' => 'POST',
            'callback' => array($this, 'update_category_meta'),
            'permission_callback' => function() {
                return current_user_can('manage_categories');
            }
        ));
    }
    
    public function update_category_meta($request) {
        $category_id = intval($request['id']);
        $meta_description = sanitize_textarea_field($request->get_param('meta_description'));
        
        if (!$meta_description) {
            return new WP_Error('no_description', '–ú–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ');
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–µ
        update_term_meta($category_id, 'meta_description', $meta_description);
        
        return array(
            'success' => true,
            'category_id' => $category_id,
            'meta_description' => $meta_description,
            'message' => '–ú–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ'
        );
    }
    
    public function add_category_meta_description() {
        if (is_category()) {
            $category_id = get_queried_object_id();
            $meta_description = get_term_meta($category_id, 'meta_description', true);
            
            if ($meta_description) {
                echo '<meta name="description" content="' . esc_attr($meta_description) . '">' . "\\n";
            }
        }
    }
}

new CategoryMetaDescriptions();
?>'''
    
    plugin_path = "/Users/skynet/Desktop/AI DEV/ainews-clean/wordpress-plugin/category-meta-descriptions.php"
    
    with open(plugin_path, 'w', encoding='utf-8') as f:
        f.write(plugin_code)
    
    print(f'‚úÖ –°–æ–∑–¥–∞–Ω –ø–ª–∞–≥–∏–Ω –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–π: {plugin_path}')
    return plugin_path

def add_meta_descriptions():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–π —á–µ—Ä–µ–∑ –ø–ª–∞–≥–∏–Ω"""
    config = Config()
    auth = HTTPBasicAuth(config.wordpress_username, config.wordpress_app_password)
    
    print('üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–π –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º')
    print('=' * 50)
    
    success_count = 0
    
    for cat_id, meta_desc in META_DESCRIPTIONS.items():
        print(f'\nüîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é ID {cat_id}...')
        
        try:
            response = requests.post(
                f'https://ailynx.ru/wp-json/category-meta/v1/update/{cat_id}',
                json={'meta_description': meta_desc},
                auth=auth
            )
            
            if response.status_code == 200:
                result = response.json()
                print(f'‚úÖ –£—Å–ø–µ—à–Ω–æ: {meta_desc[:60]}...')
                success_count += 1
            else:
                print(f'‚ùå –û—à–∏–±–∫–∞ {response.status_code}: {response.text[:100]}')
                
            time.sleep(0.2)
            
        except Exception as e:
            print(f'‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}')
    
    print(f'\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {success_count}/{len(META_DESCRIPTIONS)} –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–æ')
    return success_count > 0

def test_meta_plugin():
    """–¢–µ—Å—Ç –ø–ª–∞–≥–∏–Ω–∞ –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–π"""
    config = Config()
    auth = HTTPBasicAuth(config.wordpress_username, config.wordpress_app_password)
    
    print('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞ –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–π...')
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ" (ID: 4)
    test_description = "–¢–ï–°–¢: –ù–æ–≤–æ—Å—Ç–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –∏ –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞–≥–∏–Ω–∞."
    
    response = requests.post(
        'https://ailynx.ru/wp-json/category-meta/v1/update/4',
        json={'meta_description': test_description},
        auth=auth
    )
    
    if response.status_code == 200:
        result = response.json()
        print('‚úÖ –ü–ª–∞–≥–∏–Ω –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç!')
        print(f'   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.get("message")}')
        return True
    else:
        print(f'‚ùå –ü–ª–∞–≥–∏–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}')
        print('üí° –ù—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–≥–∏–Ω category-meta-descriptions.php')
        return False

def main():
    print('üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–π –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º')
    print('=' * 60)
    
    # –°–æ–∑–¥–∞–µ–º –ø–ª–∞–≥–∏–Ω
    plugin_path = create_meta_plugin()
    
    print('\nüí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ:')
    print('1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ category-meta-descriptions.php –≤ WordPress')
    print('2. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –ø–ª–∞–≥–∏–Ω "Category Meta Descriptions"')
    print('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–π')
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω
    print('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –ø–ª–∞–≥–∏–Ω...')
    
    if test_meta_plugin():
        print('\nüöÄ –ü–ª–∞–≥–∏–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç! –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏—è...')
        if add_meta_descriptions():
            print('\n‚úÖ –ú–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!')
            print('\nüîó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π:')
            print('   https://ailynx.ru/category/machine-learning/')
            print('   https://ailynx.ru/category/llm-news/')
            print('   https://ailynx.ru/category/ai-hardware/')
        else:
            print('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–π')
    else:
        print('\n‚è≥ –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –ø–ª–∞–≥–∏–Ω')

if __name__ == "__main__":
    main()