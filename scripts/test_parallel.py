#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã
"""

import sys
import os
import subprocess
from pathlib import Path

def test_help():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –æ–ø—Ü–∏–∏ –≤ help"""
    print("üß™ –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ help —Å –Ω–æ–≤—ã–º–∏ –æ–ø—Ü–∏—è–º–∏")
    result = subprocess.run(
        ["bash", "-c", "source venv/bin/activate && python core/main.py --help"],
        capture_output=True,
        text=True,
        cwd="/Users/skynet/Desktop/AI DEV/ainews-clean"
    )
    
    if result.returncode == 0:
        output = result.stdout
        if "--parallel-workers" in output and "--monitor-sessions" in output:
            print("‚úÖ –ù–æ–≤—ã–µ –æ–ø—Ü–∏–∏ –Ω–∞–π–¥–µ–Ω—ã –≤ help")
            return True
        else:
            print("‚ùå –ù–æ–≤—ã–µ –æ–ø—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ help")
            return False
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è help: {result.stderr}")
        return False

def test_monitor_sessions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–µ—Å—Å–∏–π"""
    print("\nüß™ –¢–µ—Å—Ç 2: –ö–æ–º–∞–Ω–¥–∞ --monitor-sessions")
    result = subprocess.run(
        ["bash", "-c", "source venv/bin/activate && python core/main.py --monitor-sessions"],
        capture_output=True,
        text=True,
        cwd="/Users/skynet/Desktop/AI DEV/ainews-clean"
    )
    
    if result.returncode == 0:
        output = result.stderr  # –õ–æ–≥–∏ –≤—ã–≤–æ–¥—è—Ç—Å—è –≤ stderr
        if "–ê–ö–¢–ò–í–ù–´–ï –°–ï–°–°–ò–ò" in output and "–ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–ù–´–ï –°–¢–ê–¢–¨–ò" in output:
            print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ --monitor-sessions —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"üìä –í—ã–≤–æ–¥: {len(output.splitlines())} —Å—Ç—Ä–æ–∫")
            return True
        else:
            print("‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã --monitor-sessions")
            print(f"stdout: {result.stdout[:200]}...")
            print(f"stderr: {result.stderr[:200]}...")
            return False
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è --monitor-sessions: {result.stderr}")
        return False

def test_parallel_workers_validation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –≤–æ—Ä–∫–µ—Ä–æ–≤"""
    print("\nüß™ –¢–µ—Å—Ç 3: –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ --parallel-workers")
    
    # –¢–µ—Å—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–æ—Ä–∫–µ—Ä–æ–≤ (0)
    result = subprocess.run(
        ["bash", "-c", "source venv/bin/activate && python core/main.py --parallel-workers 0"],
        capture_output=True,
        text=True,
        cwd="/Users/skynet/Desktop/AI DEV/ainews-clean"
    )
    
    # –í—ã–≤–æ–¥ –≤ stderr 
    output = result.stderr or result.stdout
    
    if result.returncode != 0 and "–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0" in output:
        print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–æ—Ä–∫–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        # –¢–µ—Å—Ç —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–æ—Ä–∫–µ—Ä–æ–≤ (>10)
        result = subprocess.run(
            ["bash", "-c", "source venv/bin/activate && python core/main.py --parallel-workers 15"],
            capture_output=True,
            text=True,
            cwd="/Users/skynet/Desktop/AI DEV/ainews-clean"
        )
        
        output = result.stderr or result.stdout
        if result.returncode != 0 and "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ—Ä–∫–µ—Ä–æ–≤: 10" in output:
            print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–æ—Ä–∫–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print("‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–æ—Ä–∫–µ—Ä–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"–í—ã–≤–æ–¥: {output[:200]}")
            return False
    else:
        print("‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–æ—Ä–∫–µ—Ä–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print(f"–ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞: {result.returncode}")
        print(f"–í—ã–≤–æ–¥: {output[:200]}")
        return False

def test_session_manager_import():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç SessionManager"""
    print("\nüß™ –¢–µ—Å—Ç 4: –ò–º–ø–æ—Ä—Ç SessionManager")
    
    result = subprocess.run([
        "bash", "-c", 
        "cd /Users/skynet/Desktop/AI\\ DEV/ainews-clean && source venv/bin/activate && python -c 'from core.session_manager import SessionManager; sm = SessionManager(); print(\"‚úÖ SessionManager –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ\")'"
    ], 
    capture_output=True,
    text=True,
    cwd="/Users/skynet/Desktop/AI DEV/ainews-clean"
    )
    
    if result.returncode == 0:
        print("‚úÖ SessionManager –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ SessionManager: {result.stderr}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("=" * 60)
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–û–ô –ü–û–î–î–ï–†–ñ–ö–ò")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if not Path("/Users/skynet/Desktop/AI DEV/ainews-clean/core/main.py").exists():
        print("‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª main.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")
        sys.exit(1)
    
    tests = [
        test_help,
        test_monitor_sessions, 
        test_parallel_workers_validation,
        test_session_manager_import
    ]
    
    passed = 0
    failed = 0
    
    for test in tests:
        try:
            if test():
                passed += 1
            else:
                failed += 1
        except Exception as e:
            print(f"‚ùå –¢–µ—Å—Ç {test.__name__} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º: {e}")
            failed += 1
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 60)
    print(f"‚úÖ –ü—Ä–æ—à–ª–∏: {passed}")
    print(f"‚ùå –ù–µ –ø—Ä–æ—à–ª–∏: {failed}")
    
    if failed == 0:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print(f"\n‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò ({failed}/{len(tests)})")
        print("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º")
    
    print("\nüí° –î–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("   python core/main.py --monitor-sessions")
    print("   ./scripts/parallel_demo.py")

if __name__ == "__main__":
    main()