import re

# –ß–∏—Ç–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
with open("content_huggingface.md", "r") as f:
    content = f.read()

# –ù–æ–≤—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è Hugging Face
patterns = [
    # –û—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω - –∏—â–µ—Ç —Å—Ç–∞—Ç—å–∏ —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
    r'\[\*\*([^*]+)\*\*[^\]]*\]\((https://huggingface\.co/blog/[^)]+)\)',
    # –ó–∞–ø–∞—Å–Ω–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è —Å—Å—ã–ª–æ–∫ –±–µ–∑ bold –∑–∞–≥–æ–ª–æ–≤–∫–∞
    r'\[([^\]]+)\]\((https://huggingface\.co/blog/[^)]+)\)'
]

print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–ê–¢–¢–ï–†–ù–û–í HUGGING FACE")
print("=" * 60)

all_matches = []
for i, pattern in enumerate(patterns, 1):
    print(f"\nüìã –ü–∞—Ç—Ç–µ—Ä–Ω {i}: {pattern[:50]}...")
    matches = list(re.finditer(pattern, content, re.IGNORECASE | re.DOTALL))
    
    print(f"   –ù–∞–π–¥–µ–Ω–æ: {len(matches)} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π")
    
    for j, match in enumerate(matches[:5], 1):
        title = match.group(1).strip()
        url = match.group(2)
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Å–ª—É–∂–µ–±–Ω—ã–µ —Å—Å—ã–ª–∫–∏
        if any(url.endswith(ext) for ext in ['.gif', '.png', '.jpg', '.jpeg']):
            continue
        if '/community' in url or '/assets/' in url:
            continue
            
        # –û—á–∏—â–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        title = title.replace('\\n', ' ').replace('\\\\', '').strip()
        
        print(f"   {j}. {title[:60]}...")
        print(f"      URL: {url}")
        all_matches.append((title, url))

# –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ URL
unique_urls = {}
for title, url in all_matches:
    if url not in unique_urls:
        unique_urls[url] = title

print(f"\nüìä –ò–¢–û–ì–û")
print(f"–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π: {len(unique_urls)}")
print(f"\n‚úÖ –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π:")
for i, (url, title) in enumerate(list(unique_urls.items())[:10], 1):
    print(f"{i}. {title[:60]}...")
    print(f"   {url}")
