#!/usr/bin/env python3
"""
Check Final SEO Results
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
"""

import os
import sys
from pathlib import Path
sys.path.append(str(Path(__file__).parent.parent))

import requests
from requests.auth import HTTPBasicAuth
from core.config import Config

def check_seo_results():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"""
    config = Config()
    auth = HTTPBasicAuth(config.wordpress_username, config.wordpress_app_password)
    
    print('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ SEO')
    print('=' * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categories_response = requests.get(f'{config.wordpress_api_url}/categories', auth=auth, params={'per_page': 100})
    if categories_response.status_code != 200:
        print('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π')
        return
    
    categories = categories_response.json()
    
    print(f'üìÇ –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(categories)}')
    print('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:')
    
    seo_categories = []
    
    for category in categories:
        name = category.get('name', '')
        slug = category.get('slug', '')
        description = category.get('description', '')
        
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–ù–æ–≤–æ—Å—Ç–∏"
        if '–ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏' in name or '–ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è' in name:
            seo_categories.append({
                'name': name,
                'slug': slug,
                'description': description,
                'url': f"https://ailynx.ru/category/{slug}/"
            })
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    seo_categories.sort(key=lambda x: x['name'])
    
    for i, cat in enumerate(seo_categories, 1):
        print(f'\n{i}. üìÇ {cat["name"][:60]}...')
        print(f'   üîó URL: {cat["url"]}')
        print(f'   üìù –û–ø–∏—Å–∞–Ω–∏–µ: {len(cat["description"])} —Å–∏–º–≤–æ–ª–æ–≤')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ SEO
        seo_score = 0
        issues = []
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è
        if '–ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏' in cat['name'] and '–ø–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è' in cat['name']:
            seo_score += 25
        else:
            issues.append('–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ')
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ URL
        if cat['slug'].startswith('ai-') or cat['slug'] in ['llm-news', 'machine-learning']:
            seo_score += 25
        else:
            issues.append('URL –Ω–µ –∞–Ω–≥–ª–∏—Ü–∏–∑–∏—Ä–æ–≤–∞–Ω')
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è
        if len(cat['description']) > 250:
            seo_score += 25
        else:
            issues.append('–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ')
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
        if any(word in cat['description'].lower() for word in ['–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞', '–º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è', '–Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π']):
            seo_score += 25
        else:
            issues.append('–ù–µ—Ç –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏')
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if seo_score >= 75:
            print(f'   ‚úÖ SEO Score: {seo_score}/100 - –û—Ç–ª–∏—á–Ω–æ!')
        elif seo_score >= 50:
            print(f'   ‚ö†Ô∏è SEO Score: {seo_score}/100 - –•–æ—Ä–æ—à–æ')
        else:
            print(f'   ‚ùå SEO Score: {seo_score}/100 - –¢—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏')
        
        if issues:
            print(f'   üìã –ü—Ä–æ–±–ª–µ–º—ã: {"; ".join(issues)}')

def show_summary():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–¥–∫—É –ø–æ SEO"""
    print('\nüìä –°–≤–æ–¥–∫–∞ –ø–æ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:')
    print('=' * 50)
    
    print('‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ:')
    print('‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏')
    print('‚Ä¢ –ê–Ω–≥–ª–∏–π—Å–∫–∏–µ URL-–∞–¥—Ä–µ—Å–∞ (ai-education, machine-learning)')
    print('‚Ä¢ SEO-–æ–ø–∏—Å–∞–Ω–∏—è 300+ —Å–∏–º–≤–æ–ª–æ–≤')
    print('‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è')
    
    print('\n‚è≥ –û–∂–∏–¥–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:')
    print('‚Ä¢ –ú–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏—è (–Ω—É–∂–µ–Ω –ø–ª–∞–≥–∏–Ω category-meta-descriptions.php)')
    print('‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ')
    
    print('\nüîó –ù–æ–≤—ã–µ SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ URL:')
    urls = [
        'https://ailynx.ru/category/llm-news/',
        'https://ailynx.ru/category/machine-learning/',
        'https://ailynx.ru/category/ai-hardware/',
        'https://ailynx.ru/category/digital-ai/',
        'https://ailynx.ru/category/ai-education/',
        'https://ailynx.ru/category/ai-finance/',
        'https://ailynx.ru/category/ai-science/',
        'https://ailynx.ru/category/ai-people/',
        'https://ailynx.ru/category/ai-industries/',
        'https://ailynx.ru/category/ai-news/'
    ]
    
    for url in urls:
        print(f'   {url}')
    
    print('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:')
    print('1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–ª–∞–≥–∏–Ω –º–µ—Ç–∞-–æ–ø–∏—Å–∞–Ω–∏–π –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è SEO')
    print('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ')
    print('3. –î–æ–±–∞–≤—å—Ç–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –º–µ–∂–¥—É –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏')
    print('4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ sitemap.xml –¥–ª—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º')

def main():
    print('üéØ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏')
    print('=' * 60)
    
    check_seo_results()
    show_summary()
    
    print('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')

if __name__ == "__main__":
    main()