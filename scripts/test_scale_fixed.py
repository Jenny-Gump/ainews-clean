import re

with open("content_scale.md", "r") as f:
    content = f.read()

# –ü—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ –≤—Å–µ—Ö URL –±–ª–æ–≥–∞
all_urls = re.findall(r'https://scale\.com/blog/[^)]+', content)

# –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ URL –±–µ–∑ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
unique_urls = set()
for url in all_urls:
    if '/pages/' not in url and '/tag/' not in url:
        unique_urls.add(url)

print("üß™ –¢–ï–°–¢ SCALE AI (–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô)")
print("=" * 60)
print(f"–ù–∞–π–¥–µ–Ω–æ {len(unique_urls)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π:\n")

# –î–ª—è –∫–∞–∂–¥–æ–≥–æ URL –∏—â–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
articles = {}
for url in sorted(unique_urls):
    url_pos = content.find(url)
    if url_pos > 0:
        # –ò—â–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ URL (—É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç)
        context = content[max(0, url_pos-800):url_pos]
        
        # –†–∞–∑–ª–∏—á–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        title = None
        
        # –ü–∞—Ç—Ç–µ—Ä–Ω 1: **Title**
        title_pattern = r'\*\*([^*]+)\*\*'
        title_matches = re.findall(title_pattern, context)
        if title_matches:
            # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
            raw_title = title_matches[-1]
            # –£–±–∏—Ä–∞–µ–º escape —Å–∏–º–≤–æ–ª—ã
            title = raw_title.replace('\\', '')
            
        if title and len(title) < 200:
            articles[url] = title

print(f"‚úÖ –°—Ç–∞—Ç—å–∏ —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏: {len(articles)}\n")
for i, (url, title) in enumerate(list(articles.items()), 1):
    print(f"{i}. {title[:70]}")
    print(f"   {url}\n")