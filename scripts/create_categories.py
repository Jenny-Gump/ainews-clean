#!/usr/bin/env python3
"""
Create WordPress Categories
Создание категорий для AI News сайта
"""

import os
import sys
from pathlib import Path

# Add parent directory to path
sys.path.append(str(Path(__file__).parent.parent))

import requests
from requests.auth import HTTPBasicAuth
from core.config import Config
from app_logging import get_logger

logger = get_logger('create_categories')

# Категории с описаниями
CATEGORIES = {
    "Новости": {
        "description": "Главный раздел новостей искусственного интеллекта. Здесь собраны все актуальные события, открытия и достижения в мире AI.\n\nМы следим за развитием технологий машинного обучения, нейронных сетей, компьютерного зрения и обработки естественного языка, чтобы вы всегда были в курсе последних трендов.",
        "parent": 0
    },
    "LLM": {
        "description": "Большие языковые модели (Large Language Models) - революция в обработке естественного языка. Новости о GPT, Claude, LLaMA, Gemini и других передовых моделях.\n\nСледим за развитием чат-ботов, систем генерации текста, кода и анализа данных. Обзоры новых релизов, сравнения возможностей и практические применения LLM в различных индустриях.",
        "parent": "Новости"
    },
    "Машинное обучение": {
        "description": "Фундаментальные исследования и прорывы в области машинного обучения. От классических алгоритмов до современных архитектур нейронных сетей.\n\nОсвещаем новые методы обучения, оптимизации моделей, работу с данными и практические кейсы применения ML в науке и бизнесе. Технические детали для специалистов и понятные объяснения для широкой аудитории.",
        "parent": "Новости"
    },
    "Техника": {
        "description": "Технические аспекты искусственного интеллекта: железо, программное обеспечение, инфраструктура. Новости о специализированных чипах для AI, квантовых компьютерах, облачных платформах.\n\nОбзоры GPU от NVIDIA и AMD, TPU от Google, нейроморфные процессоры и другие инновации в области вычислительной техники для задач машинного обучения.",
        "parent": "Новости"
    },
    "Digital": {
        "description": "Цифровая трансформация с помощью искусственного интеллекта. Как AI меняет интернет, социальные сети, электронную коммерцию и цифровой маркетинг.\n\nИнновации в области персонализации контента, рекомендательных систем, автоматизации digital-процессов и создания виртуальных помощников для бизнеса и повседневной жизни.",
        "parent": "Новости"
    },
    "Люди": {
        "description": "Истории людей, создающих будущее искусственного интеллекта. Интервью с исследователями, предпринимателями и визионерами индустрии.\n\nПортреты лидеров мнений: от пионеров машинного обучения до молодых стартаперов. Карьерные истории, образовательные пути и вдохновляющие примеры успеха в мире AI.",
        "parent": "Новости"
    },
    "Финансы": {
        "description": "Искусственный интеллект в финансовом секторе: от алгоритмической торговли до оценки кредитных рисков. Инвестиции в AI-стартапы и финансовые показатели tech-гигантов.\n\nАнализируем применение машинного обучения в банкинге, страховании, управлении активами. Обзоры финтех-решений на базе AI и их влияние на традиционную финансовую систему.",
        "parent": "Новости"
    },
    "Наука": {
        "description": "Научные прорывы благодаря искусственному интеллекту. От предсказания структуры белков до поиска новых материалов и лекарств.\n\nКак машинное обучение ускоряет исследования в физике, химии, биологии и медицине. Академические публикации, результаты экспериментов и фундаментальные открытия на стыке AI и естественных наук.",
        "parent": "Новости"
    },
    "Обучение": {
        "description": "Образование в эпоху искусственного интеллекта. Курсы, программы, сертификации и лучшие практики изучения машинного обучения и data science.\n\nОбзоры образовательных платформ, университетских программ, онлайн-курсов. Советы по карьере в AI, roadmap для начинающих и продвинутых специалистов, академические возможности.",
        "parent": "Новости"
    },
    "Другие индустрии": {
        "description": "Применение искусственного интеллекта в различных отраслях: от сельского хозяйства до космической индустрии. Неожиданные и инновационные кейсы использования AI.\n\nИстории о том, как машинное обучение трансформирует традиционные индустрии, создает новые бизнес-модели и решает глобальные проблемы человечества.",
        "parent": "Новости"
    },
    "Безопасность": {
        "description": "Безопасность и этика искусственного интеллекта. Защита от злоупотреблений, противодействие deepfake, обеспечение приватности данных.\n\nОсвещаем вопросы ответственной разработки AI, bias в алгоритмах, регулирование технологий. Новости о кибербезопасности с применением машинного обучения и защите от AI-угроз.",
        "parent": "Новости"
    },
    "Творчество": {
        "description": "Искусственный интеллект в творческих индустриях. Генерация изображений, музыки, видео, текстов. AI-художники и новые формы цифрового искусства.\n\nОт Midjourney и Stable Diffusion до музыкальных генераторов и AI-режиссуры. Как творческие профессии адаптируются к эпохе генеративного AI и создают новые жанры.",
        "parent": "Новости"
    },
    "Здоровье": {
        "description": "Революция AI в медицине и здравоохранении. Диагностика заболеваний, разработка лекарств, персонализированная медицина и цифровые терапевты.\n\nПрорывы в анализе медицинских изображений, предсказании эпидемий, геномике. Как машинное обучение спасает жизни и делает здравоохранение доступнее.",
        "parent": "Новости"
    },
    "Космос": {
        "description": "Искусственный интеллект в космических исследованиях и освоении космоса. Автономные космические аппараты, анализ данных с телескопов, поиск экзопланет и внеземной жизни.\n\nПрименение машинного обучения в астрономии, космической навигации, управлении спутниками. Новости о проектах SpaceX, NASA, ESA и других космических агентств в области AI. Роботы и AI-системы для колонизации Марса и исследования дальнего космоса.",
        "parent": "Новости"
    },
    "Война": {
        "description": "Военные применения искусственного интеллекта и разработки в оборонной промышленности. Автономные дроны, системы распознавания целей, кибервойны и электронная разведка.\n\nНовости о военных AI-проектах разных стран, этические дебаты об автономном оружии, системы ПВО с машинным обучением. Анализ военных стратегий с применением AI и прогнозирование конфликтов.",
        "parent": "Новости"
    },
    "Политика": {
        "description": "Государственное регулирование AI и геополитика искусственного интеллекта. Национальные стратегии развития AI, международное сотрудничество и технологическая гонка между странами.\n\nЗаконодательные инициативы, AI-суверенитет, использование AI в выборах и госуправлении. Политические дебаты о будущем AI, санкции и ограничения на технологии. Влияние AI на демократию и авторитарные режимы.",
        "parent": "Новости"
    }
}


def _get_custom_slug(cat_name):
    """Получить кастомный slug для категории"""
    custom_slugs = {
        'Космос': 'space',
        'Война': 'war',
        'Политика': 'politics'
    }
    
    if cat_name in custom_slugs:
        return custom_slugs[cat_name]
    
    # Для остальных используем стандартную логику
    return cat_name.lower().replace(' ', '-').replace('llm', 'llm')


def create_categories():
    """Создание категорий в WordPress"""
    config = Config()
    
    if not all([config.wordpress_api_url, config.wordpress_username, config.wordpress_app_password]):
        logger.error("WordPress API не настроен")
        return False
    
    auth = HTTPBasicAuth(config.wordpress_username, config.wordpress_app_password)
    base_url = f"{config.wordpress_api_url}/categories"
    
    # Сначала получаем существующие категории
    try:
        response = requests.get(base_url, auth=auth, params={'per_page': 100})
        if response.status_code != 200:
            logger.error(f"Не удалось получить категории: {response.status_code}")
            return False
        
        existing = {cat['name']: cat['id'] for cat in response.json()}
        logger.info(f"Найдено существующих категорий: {len(existing)}")
        
    except Exception as e:
        logger.error(f"Ошибка при получении категорий: {e}")
        return False
    
    # Словарь для хранения ID созданных категорий
    category_ids = existing.copy()
    
    # Создаем категории
    for cat_name, cat_info in CATEGORIES.items():
        if cat_name in existing:
            logger.info(f"✅ {cat_name} - уже существует (ID: {existing[cat_name]})")
            continue
        
        # Определяем parent ID
        parent_id = 0
        if cat_info['parent'] != 0:
            parent_name = cat_info['parent']
            if parent_name in category_ids:
                parent_id = category_ids[parent_name]
            else:
                logger.warning(f"⚠️  Родительская категория '{parent_name}' не найдена для '{cat_name}'")
                continue
        
        # Создаем категорию
        data = {
            'name': cat_name,
            'slug': _get_custom_slug(cat_name),
            'description': cat_info['description'],
            'parent': parent_id
        }
        
        try:
            response = requests.post(base_url, json=data, auth=auth)
            
            if response.status_code == 201:
                new_cat = response.json()
                category_ids[cat_name] = new_cat['id']
                logger.info(f"✅ {cat_name} - создана (ID: {new_cat['id']})")
            else:
                logger.error(f"❌ {cat_name} - ошибка создания: {response.status_code}")
                logger.error(f"   Ответ: {response.text[:200]}")
                
        except Exception as e:
            logger.error(f"❌ {cat_name} - ошибка: {e}")
    
    return True


def main():
    """Главная функция"""
    print("\n🚀 Создание категорий для AI News")
    print("=" * 50)
    
    if create_categories():
        print("\n✅ Категории успешно созданы!")
        print("\nТеперь можно публиковать статьи с правильными категориями.")
    else:
        print("\n❌ Произошла ошибка при создании категорий")


if __name__ == "__main__":
    main()