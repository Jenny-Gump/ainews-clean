#!/usr/bin/env python3
"""
Mass Update Categories via Database Plugin
–ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —á–µ—Ä–µ–∑ –ø–ª–∞–≥–∏–Ω –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –ë–î
"""

import os
import sys
from pathlib import Path
sys.path.append(str(Path(__file__).parent.parent))

import requests
from requests.auth import HTTPBasicAuth
from core.config import Config
import time

# SEO –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
CATEGORY_SEO_DATA = {
    "LLM": {
        "title": "–ù–æ–≤–æ—Å—Ç–∏ LLM - –ë–æ–ª—å—à–∏–µ —è–∑—ã–∫–æ–≤—ã–µ –º–æ–¥–µ–ª–∏ | AI Lynx",
        "desc": "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ –±–æ–ª—å—à–∏—Ö —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª—è—Ö: GPT, Claude, Gemini, LLaMA. –û–±–∑–æ—Ä—ã, —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑ —Ä–∞–∑–≤–∏—Ç–∏—è LLM —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.",
        "keyword": "LLM –Ω–æ–≤–æ—Å—Ç–∏"
    },
    "–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ": {
        "title": "–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ - ML –Ω–æ–≤–æ—Å—Ç–∏ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è | AI Lynx",
        "desc": "–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è: –∞–ª–≥–æ—Ä–∏—Ç–º—ã, –Ω–µ–π—Ä–æ—Å–µ—Ç–∏, –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è. –ü—Ä–æ—Ä—ã–≤—ã –≤ –æ–±–ª–∞—Å—Ç–∏ ML –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è.",
        "keyword": "–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ"
    },
    "–¢–µ—Ö–Ω–∏–∫–∞": {
        "title": "AI –¢–µ—Ö–Ω–∏–∫–∞ - –ñ–µ–ª–µ–∑–æ –∏ —Å–æ—Ñ—Ç –¥–ª—è –ò–ò | AI Lynx",
        "desc": "–ù–æ–≤–æ—Å—Ç–∏ –æ —Ç–µ—Ö–Ω–∏–∫–µ –¥–ª—è –ò–ò: GPU, TPU, —á–∏–ø—ã, –æ–±–ª–∞—á–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã. –û–±–∑–æ—Ä—ã –∂–µ–ª–µ–∑–∞ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –¥–ª—è –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è.",
        "keyword": "AI —Ç–µ—Ö–Ω–∏–∫–∞"
    },
    "Digital": {
        "title": "Digital AI - –¶–∏—Ñ—Ä–æ–≤–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è —Å –ò–ò | AI Lynx",
        "desc": "–ö–∞–∫ –ò–ò –º–µ–Ω—è–µ—Ç —Ü–∏—Ñ—Ä–æ–≤–æ–π –º–∏—Ä: –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, —Å–æ—Ü—Å–µ—Ç–∏, e-commerce, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥. –ò–Ω–Ω–æ–≤–∞—Ü–∏–∏ –≤ digital-—Å—Ñ–µ—Ä–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º AI.",
        "keyword": "digital AI"
    },
    "–õ—é–¥–∏": {
        "title": "–õ—é–¥–∏ –≤ AI - –õ–∏–¥–µ—Ä—ã –∏ –≤–∏–∑–∏–æ–Ω–µ—Ä—ã –ò–ò | AI Lynx",
        "desc": "–ò—Å—Ç–æ—Ä–∏–∏ –ª—é–¥–µ–π, —Å–æ–∑–¥–∞—é—â–∏—Ö –±—É–¥—É—â–µ–µ –ò–ò: –∏–Ω—Ç–µ—Ä–≤—å—é —Å –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è–º–∏, –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—è–º–∏, –≤–∏–∑–∏–æ–Ω–µ—Ä–∞–º–∏ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.",
        "keyword": "–ª–∏–¥–µ—Ä—ã AI"
    },
    "–§–∏–Ω–∞–Ω—Å—ã": {
        "title": "AI –≤ –§–∏–Ω–∞–Ω—Å–∞—Ö - –ò–ò –≤ –±–∞–Ω–∫–∏–Ω–≥–µ –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö | AI Lynx",
        "desc": "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ò–ò –≤ —Ñ–∏–Ω–∞–Ω—Å–∞—Ö: –∞–ª–≥–æ—Ä–∏—Ç–º–∏—á–µ—Å–∫–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è, –∫—Ä–µ–¥–∏—Ç–Ω—ã–µ —Ä–∏—Å–∫–∏, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ AI-—Å—Ç–∞—Ä—Ç–∞–ø—ã, —Ñ–∏–Ω—Ç–µ—Ö —Å –º–∞—à–∏–Ω–Ω—ã–º –æ–±—É—á–µ–Ω–∏–µ–º.",
        "keyword": "AI —Ñ–∏–Ω–∞–Ω—Å—ã"
    },
    "–ù–∞—É–∫–∞": {
        "title": "AI –≤ –ù–∞—É–∫–µ - –ù–∞—É—á–Ω—ã–µ –ø—Ä–æ—Ä—ã–≤—ã —Å –ò–ò | AI Lynx", 
        "desc": "–ö–∞–∫ –ò–ò —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –Ω–∞—É–∫—É: –æ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –±–µ–ª–∫–æ–≤ –¥–æ –ø–æ–∏—Å–∫–∞ –ª–µ–∫–∞—Ä—Å—Ç–≤. –ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –≤ —Ñ–∏–∑–∏–∫–µ, —Ö–∏–º–∏–∏, –±–∏–æ–ª–æ–≥–∏–∏.",
        "keyword": "AI –Ω–∞—É–∫–∞"
    },
    "–û–±—É—á–µ–Ω–∏–µ": {
        "title": "AI –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ - –ö—É—Ä—Å—ã –∏ –æ–±—É—á–µ–Ω–∏–µ –ò–ò | AI Lynx",
        "desc": "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ —Å—Ñ–µ—Ä–µ –ò–ò: –∫—É—Ä—Å—ã, –ø—Ä–æ–≥—Ä–∞–º–º—ã, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ –º–∞—à–∏–Ω–Ω–æ–º—É –æ–±—É—á–µ–Ω–∏—é. Roadmap –∏ –∫–∞—Ä—å–µ—Ä–∞ –≤ artificial intelligence.",
        "keyword": "–æ–±—É—á–µ–Ω–∏–µ AI"
    },
    "–î—Ä—É–≥–∏–µ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏": {
        "title": "AI –≤ –ò–Ω–¥—É—Å—Ç—Ä–∏—è—Ö - –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ò–ò –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ñ–µ—Ä–∞—Ö | AI Lynx",
        "desc": "–ò–ò –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ—Ç—Ä–∞—Å–ª—è—Ö: —Å–µ–ª—å—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ, –∫–æ—Å–º–æ—Å, –º–µ–¥–∏—Ü–∏–Ω–∞, –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ. –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–µ–π—Å—ã –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è AI.",
        "keyword": "AI –∏–Ω–¥—É—Å—Ç—Ä–∏–∏"
    },
    "–ù–æ–≤–æ—Å—Ç–∏": {
        "title": "AI –ù–æ–≤–æ—Å—Ç–∏ - –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –≤ –º–∏—Ä–µ –ò–ò | AI Lynx",
        "desc": "–°–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞: –ø—Ä–æ—Ä—ã–≤—ã, –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, —Ä–µ–ª–∏–∑—ã. –ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ —Ä–∞–∑–≤–∏—Ç–∏—è AI —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.",
        "keyword": "AI –Ω–æ–≤–æ—Å—Ç–∏"
    }
}


def mass_update_via_db():
    """–ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ë–î –ø–ª–∞–≥–∏–Ω"""
    config = Config()
    auth = HTTPBasicAuth(config.wordpress_username, config.wordpress_app_password)
    
    print('üóÑÔ∏è  –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ –ë–î')
    print('=' * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categories_response = requests.get(f'{config.wordpress_api_url}/categories', auth=auth, params={'per_page': 100})
    if categories_response.status_code != 200:
        print('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π')
        return False
    
    categories = categories_response.json()
    category_map = {cat['name']: cat['id'] for cat in categories}
    
    print(f'üìÇ –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(categories)}')
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    bulk_data = []
    for cat_name, seo_data in CATEGORY_SEO_DATA.items():
        if cat_name in category_map:
            bulk_data.append({
                'category_id': category_map[cat_name],
                'title': seo_data['title'],
                'desc': seo_data['desc'],
                'keyword': seo_data['keyword']
            })
            print(f'‚úì {cat_name} (ID: {category_map[cat_name]})')
        else:
            print(f'‚ùå {cat_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
    
    if not bulk_data:
        print('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è')
        return False
    
    print(f'\nüöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –º–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ {len(bulk_data)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π...')
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    response = requests.post(
        'https://ailynx.ru/wp-json/yoast-db/v1/bulk-update',
        json=bulk_data,
        auth=auth
    )
    
    if response.status_code == 200:
        result = response.json()
        print('‚úÖ –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!')
        print(f'üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {result.get("processed", 0)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π')
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        results = result.get('results', [])
        success_count = 0
        
        for res in results:
            if res.get('success'):
                print(f'  ‚úÖ {res.get("category_id")}: {res.get("results", {})}')
                success_count += 1
            else:
                print(f'  ‚ùå {res.get("category_id")}: –û—à–∏–±–∫–∞')
        
        print(f'\nüìà –ò—Ç–æ–≥–æ —É—Å–ø–µ—à–Ω–æ: {success_count}/{len(bulk_data)}')
        return success_count > 0
    else:
        print(f'‚ùå –û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {response.status_code}')
        print(f'   –û—Ç–≤–µ—Ç: {response.text[:200]}...')
        return False


def verify_db_results():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —á–µ—Ä–µ–∑ –ë–î"""
    config = Config()
    auth = HTTPBasicAuth(config.wordpress_username, config.wordpress_app_password)
    
    print('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —á–µ—Ä–µ–∑ –ë–î...')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ë–î
    check_response = requests.get('https://ailynx.ru/wp-json/yoast-db/v1/check-tables', auth=auth)
    if check_response.status_code == 200:
        data = check_response.json()
        yoast_tables = data.get('yoast_tables', {})
        
        print(f'üìä Yoast indexable –∑–∞–ø–∏—Å–µ–π: {yoast_tables.get("yoast_indexable_count", 0)}')
        print(f'üìã Termmeta –∑–∞–ø–∏—Å–µ–π —Å Yoast: {len(data.get("termmeta_yoast", []))}')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        test_categories = ['–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ', 'LLM', '–¢–µ—Ö–Ω–∏–∫–∞']
        categories_response = requests.get(f'{config.wordpress_api_url}/categories', auth=auth, params={'per_page': 100})
        
        if categories_response.status_code == 200:
            categories = categories_response.json()
            category_map = {cat['name']: cat['id'] for cat in categories}
            
            found_updates = 0
            
            for cat_name in test_categories:
                if cat_name not in category_map:
                    continue
                    
                cat_id = category_map[cat_name]
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ WordPress API
                wp_response = requests.get(f'{config.wordpress_api_url}/categories/{cat_id}', auth=auth)
                if wp_response.status_code == 200:
                    wp_data = wp_response.json()
                    yoast_head = wp_data.get('yoast_head', '')
                    yoast_title = wp_data.get('yoast_head_json', {}).get('title', '')
                    
                    print(f'\nüìÇ {cat_name}:')
                    
                    # –ò—â–µ–º –Ω–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤ head
                    if 'AI Lynx' in yoast_head and ('ML –Ω–æ–≤–æ—Å—Ç–∏' in yoast_head or 'LLM' in yoast_head or 'AI –¢–µ—Ö–Ω–∏–∫–∞' in yoast_head):
                        print(f'  ‚úÖ Yoast head –æ–±–Ω–æ–≤–∏–ª—Å—è: {yoast_title}')
                        found_updates += 1
                    else:
                        print(f'  ‚ùå Yoast head: {yoast_title}')
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–∞-–ø–æ–ª—è –Ω–∞–ø—Ä—è–º—É—é
                        meta_response = requests.get(f'{config.wordpress_api_url}/categories/{cat_id}?_fields=meta', auth=auth)
                        if meta_response.status_code == 200:
                            meta_data = meta_response.json()
                            meta = meta_data.get('meta', {})
                            if any('AI Lynx' in str(v) for v in meta.values()):
                                print(f'  ‚ÑπÔ∏è –î–∞–Ω–Ω—ã–µ –≤ –º–µ—Ç–∞-–ø–æ–ª—è—Ö –Ω–∞–π–¥–µ–Ω—ã')
                            else:
                                print(f'  ‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –≤ –º–µ—Ç–∞-–ø–æ–ª—è—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
            
            if found_updates > 0:
                print(f'\nüéâ –ù–∞–π–¥–µ–Ω–æ {found_updates} —É—Å–ø–µ—à–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –≤ Yoast head!')
            else:
                print(f'\n‚è≥ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∫–∞ –Ω–µ –æ—Ç—Ä–∞–∂–∞—é—Ç—Å—è –≤ Yoast head')
                print('üí° –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ:')
                print('  1. –ü–æ–¥–æ–∂–¥–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞ Yoast')
                print('  2. –ü–µ—Ä–µ—Å—Ç—Ä–æ–∏—Ç—å indexables –≤ –∞–¥–º–∏–Ω–∫–µ Yoast')
                print('  3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Yoast SEO')
    else:
        print('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∞–±–ª–∏—Ü—ã –ë–î')


def main():
    print('üóÑÔ∏è  –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Yoast —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ –ë–î')
    print('=' * 60)
    
    if mass_update_via_db():
        print('\n‚è≥ –ñ–¥–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã (3 —Å–µ–∫—É–Ω–¥—ã)...')
        time.sleep(3)
        
        verify_db_results()
        
        print('\n‚úÖ –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ë–î –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
        print('\nüí° –ï—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –≤–∏–¥–Ω—ã –≤ Yoast head:')
        print('1. –ó–∞–π–¥–∏—Ç–µ –≤ –∞–¥–º–∏–Ω–∫—É: https://ailynx.ru/wp-admin/admin.php?page=wpseo_tools')
        print('2. –ù–∞–π–¥–∏—Ç–µ "SEO Data" ‚Üí "Reindex"')
        print('3. –ù–∞–∂–º–∏—Ç–µ "Reindex" –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è')
        print('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª—é–±—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é: https://ailynx.ru/wp-admin/edit-tags.php?taxonomy=category')
        
    else:
        print('\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –º–∞—Å—Å–æ–≤–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏')
        print('üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä—É—á–Ω–æ–π –≤–≤–æ–¥ –∏–ª–∏ –ø–ª–∞–≥–∏–Ω V2')


if __name__ == "__main__":
    main()